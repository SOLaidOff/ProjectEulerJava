package solaidoff.euler.java;

import solaidoff.euler.java.helper.EulerBasicMath;

/**
 * https://projecteuler.net/problem=2
 * 
 * Even Fibonacci numbers
 * 
 * Problem 2
 * 
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 * 
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */
public class Problem002 extends EulerProblem {
    public static final int CEILING = 4000000;
    
    public long doProblem() {
        int sum = 0;
        
        int fibLower = 1;
        int fibHigher = 2;
        
        do {
            if(EulerBasicMath.isEven(fibLower)) {
                sum += fibLower;
            }
            
            int swapSpace = fibLower + fibHigher;
            fibLower = fibHigher;
            fibHigher = swapSpace;
        }
        while(fibLower < CEILING);
        
        return sum;
    }

    public static void main(String[] args) {
        System.out.println(new Problem002().doProblem());
    }
}
